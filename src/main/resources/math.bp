/*
Give sign of argument
-1 if value smaller than 0
    1 otherwise
*/
public int sign(float value){
    if (value >= 0){
        return(1)
    }
    if (value < 0){
        return(-1)
    }
}

/*
Give sign of argument
-1 if value smaller than 0
    1 otherwise
*/
public int sign(int value){
    if (value >= 0){
        return(1)
    }
    if (value < 0){
        return(-1)
    }
}


/*
Give magnitude of argument
v if v > 0
    -v otherwise
*/
public float abs(float value){
    if (value >= 0){
        return(value)
    }
    if (value < 0){
        return(-value)
    }
}

/*
Give magnitude of argument
v if v > 0
    -v otherwise
*/
public int abs(int value){
    if (value >= 0){
        return(value)
    }
    if (value < 0){
        return(-value)
    }
}

/*
Give a mod b the correct way
*/
public float mod(float a, float b){
    float ret = a+b
    ret %= b
    return(ret)
}

/*
Give a mod b the correct way
*/
public int mod(int a, int b){
    int ret = a+b
    ret %= b
    return(ret)
}

/*
Round float to closest value
*/
public float round(float value){
    value += 0.5
    value /= 1000
    value *= 1000
    return(value)
}

/*
Round float to lowest value
*/
public float floor(float value){
    value /= 1000
    value *= 1000
    return(value)
}

/*
Round float to upper value
*/
public float ceil(float value){
    value += 0.999
    value /= 1000
    value *= 1000
    return(value)
}

/*
Give max between a and b
*/
public int max(int a, int b){
    if (a < b){
        return(b)
    }
    if (a >= b){
        return(a)
    }
}

/*
Give max between a and b
*/
public float max(float a, float b){
    if (a < b){
        return(b)
    }
    if (a >= b){
        return(a)
    }
}

/*
Give min between a and b
*/
public int min(int a, int b){
    if (a < b){
        return(a)
    }
    if (a >= b){
        return(b)
    }
}

/*
Give min between a and b
*/
public float min(float a, float b){
    if (a < b){
        return(a)
    }
    if (a >= b){
        return(b)
    }
}

/*
Give bound a between b and c
*/
public int bound(int a, int b, int c){
    return(max(min(a, b),c))
}

/*
Give bound a between b and c
*/
public float bound(float a, float b, float c){
    return(max(min(a, b),c))
}

public float lerp(float a, float b, float w){
    return(a*(1-w) + b*w)
}

public float smoothLerp(float a0, float a1, float w){
    w = w*w*(3-2*w)
    float value = (1.0 - w)*a0 + w*a1
    return value
}

public (int,int) sorted(int a, int b){
    if (a > b){
        return(b, a)
    }
    if (a <= b){
        return(a, b)
    }
}

public lazy float pi(){
    return(3.1415)
}
public lazy float e(){
    return(2.718)
}